#!/bin/sh
# Set initial variables:
CWD=`pwd`
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi
PKG=$TMP/package-aoutools
SRC=/devel/manpagesrc
INFO=/devel/info-pages/usr/info
TEX=/devel/texinfo-docs

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
if [ ! -d $PKG ]; then
  mkdir -p $PKG # place for the package to be built
fi

# Explode the package framework:
cd $PKG
explodepkg $CWD/_aoutools.tar.gz

# Function to handle manpage source:
man2gz () { # $1 is source page name, $2 is target name for preformatted
            # output (full path && name) and $3 is the same, but for the
            # source.
  mkdir -p `dirname $2`
  groff -Tascii -mandoc $1 | gzip -9c > $2
  if [ ! "$3" = "" ]; then
    mkdir -p `dirname $3`
    cat $1 > $3 
  fi 
}

echo "+============+"
echo "| tools-2.17 |"
echo "+============+"
cd $TMP
tar xzvf $CWD/tools-2.17.tar.gz
cd tools-2.17/tools
make CFLAGS=-O2 LDFLAGS=-s
cat getsize > $PKG/usr/bin/getsize
cat jumpas > $PKG/usr/bin/jumpas
cat mkcompat > $PKG/usr/bin/mkcompat
cat mkimage > $PKG/usr/bin/mkimage
cat mkstubs > $PKG/usr/bin/mkstubs
cat verify > $PKG/usr/bin/verify-shlib

# Build the package:
cd $PKG
tar czvf $TMP/aoutools.tgz .

# Warn of zero-length files:
for file in `find . -type f -print` ; do
 if [ "`filesize $file`" = "0" ]; then
  echo "WARNING: zero length file $file"
 fi
 if [ "`filesize $file`" = "20" ]; then
  echo "WARNING: possible empty gzipped file $file"
 fi
done

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/tools-2.17
  rm -rf $PKG
fi
