#!/bin/sh
# Set initial variables:
CWD=`pwd`
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi
PKG=$TMP/package-mailx
SRC=/devel/manpagesrc
INFO=/devel/info-pages/usr/info
TEX=/devel/texinfo-docs

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
if [ ! -d $PKG ]; then
  mkdir -p $PKG # place for the package to be built
fi

# Explode the package framework:
cd $PKG
explodepkg $CWD/_mailx.tar.gz

# Function to handle manpage source:
man2gz () { # $1 is source page name, $2 is target name for preformatted
            # output (full path && name) and $3 is the same, but for the
            # source.
  mkdir -p `dirname $2`
  groff -Tascii -mandoc $1 | gzip -9c > $2
  if [ ! "$3" = "" ]; then
    mkdir -p `dirname $3`
    cat $1 > $3 
  fi 
}

echo "+=============+"
echo "| mailx-8.1.1 |"
echo "+=============+"
cd $TMP
tar xzvf $CWD/mailx_8.1.1.orig.tar.gz
cd mailx-8.1.1.orig
zcat $CWD/mailx_8.1.1-9.diff.gz | patch -p1
zcat $CWD/mailx_8.1.1.slack.diff.gz | patch
zcat $CWD/mailx-overflow.diff.gz | patch -p1
make
strip mail
cat mail > $PKG/usr/bin/Mail
chown root.mail $PKG/usr/bin/Mail
chmod 2711 $PKG/usr/bin/Mail
cat mail.1 | gzip -9c > $PKG/usr/man/man1/mailx.1.gz
cd USD.doc
tbl mail0.nr mail1.nr mail2.nr mail3.nr mail4.nr mail5.nr mail6.nr \
 mail7.nr mail8.nr mail9.nr maila.nr | groff -me -Tascii > manual.txt
mkdir -p $PKG/usr/doc/mailx
cp manual.txt $PKG/usr/doc/mailx
cd ../misc
cat mail.rc > $PKG/etc/mail.rc
cat mail.help > $PKG/usr/lib/mail.help
cat mail.tildehelp > $PKG/usr/lib/mail.tildehelp

# Build the package:
cd $PKG
tar czvf $TMP/mailx.tgz .

# Warn of zero-length files:
for file in `find . -type f -print` ; do
 if [ "`filesize $file`" = "0" ]; then
  echo "WARNING: zero length file $file"
 fi
 if [ "`filesize $file`" = "20" ]; then
  echo "WARNING: possible empty gzipped file $file"
 fi
done

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/mailx-8.1.1.orig
  rm -rf $PKG
fi
