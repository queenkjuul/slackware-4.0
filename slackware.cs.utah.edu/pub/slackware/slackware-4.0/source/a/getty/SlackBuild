#!/bin/sh
# Set initial variables:
CWD=`pwd`
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi
PKG=$TMP/package-getty
SRC=/devel/manpagesrc
INFO=/devel/info-pages/usr/info
TEX=/devel/texinfo-docs

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
if [ ! -d $PKG ]; then
  mkdir -p $PKG # place for the package to be built
fi

# Explode the package framework:
cd $PKG
explodepkg $CWD/_getty.tar.gz

# Function to handle manpage source:
man2gz () { # $1 is source page name, $2 is target name for preformatted
            # output (full path && name) and $3 is the same, but for the
            # source.
  mkdir -p `dirname $2`
  groff -Tascii -mandoc $1 | gzip -9c > $2
  if [ ! "$3" = "" ]; then
    mkdir -p `dirname $3`
    cat $1 > $3 
  fi 
}

echo "+=================+"
echo "| getty_ps-2.0.7j |"
echo "+=================+"
cd $TMP
tar xzvf $CWD/getty_ps-2.0.7j.tar.gz
cd getty_ps-2.0.7j
zcat $CWD/getty_ps-2.0.7j.diff.gz | patch
make clean
make
cat getty > $PKG/sbin/getty
cat uugetty > $PKG/sbin/uugetty
cat man/getty.1 | gzip -9c > $PKG/usr/man/man1/getty.1.gz
cat man/gettydefs.5 | gzip -9c > $PKG/usr/man/man5/gettydefs.5.gz

# Build the package:
cd $PKG
tar czvf $TMP/getty.tgz .

# Warn of zero-length files:
for file in `find . -type f -print` ; do
 if [ "`filesize $file`" = "0" ]; then
  echo "WARNING: zero length file $file"
 fi
 if [ "`filesize $file`" = "20" ]; then
  echo "WARNING: possible empty gzipped file $file"
 fi
done

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/getty_ps-2.0.7j
  rm -rf $PKG
fi
