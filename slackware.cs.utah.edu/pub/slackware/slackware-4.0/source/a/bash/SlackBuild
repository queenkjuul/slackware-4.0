#!/bin/sh
# Set initial variables:
CWD=`pwd`
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi
PKG=$TMP/package-bash
SRC=/devel/manpagesrc
INFO=$PKG/usr/info
TEX=/devel/texinfo-docs

if [ ! -d $TMP ]; then
  mkdir -p $TMP # location to build the source
fi
if [ ! -d $PKG ]; then
  mkdir -p $PKG # place for the package to be built
fi

# Explode the package framework:
cd $PKG
explodepkg $CWD/_bash.tar.gz

# Function to handle manpage source:
man2gz () { # $1 is source page name, $2 is target name for preformatted
            # output (full path && name) and $3 is the same, but for the
            # source.
  mkdir -p `dirname $2`
  groff -Tascii -mandoc $1 | gzip -9c > $2
  if [ ! "$3" = "" ]; then
    mkdir -p `dirname $3`
    cat $1 > $3 
  fi 
}

echo "+=============+"
echo "| bash-1.14.7 |"
echo "+=============+"
cd $TMP
tar xzvf $CWD/bash-1.14.7.tar.gz
cd bash-1.14.7
make CFLAGS=-O2 LDFLAGS=-s
cat bash > $PKG/bin/bash.new
cp -a NEWS README RELEASE COPYING $PKG/usr/doc/bash
( cd $PKG/usr/doc/bash ; chown root.root * )
( cd $PKG/usr/doc/bash ; chmod 644 * )
cd documentation
cp -a article.txt $PKG/usr/doc/bash
chown root.root $PKG/usr/doc/bash/article.txt
chmod 644 $PKG/usr/doc/bash/article.txt
for page in bash.1 builtins.1 ; do
  cat $page | gzip -9c > $PKG/usr/man/man1/$page.gz
done
cat readline.3 | gzip -9c > $PKG/usr/man/man3/readline.3.gz
mkdir -p $INFO
cat features.info | gzip -9c > $INFO/features.info.gz
#cp features.texi $TEX/features.texi

# Build the package:
cd $PKG
tar czvf $TMP/bash.tgz .

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/bash-1.14.7
  rm -rf $PKG
fi
